name: Deploy Backend to EC2

on:
  push:
    branches: [main]  # main 브랜치에 push 시 배포 트리거

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. SSH 접속 테스트 (선택 사항)
      - name: Test SSH connection
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: echo "✅ EC2 SSH 연결 성공"

      # 2. 소스 코드 체크아웃
      - name: Checkout source
        uses: actions/checkout@v3

      # 3. JDK 설정 (JAR 빌드용)
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # 4. Gradle로 Spring Boot 빌드
      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test

      # 5. 빌드된 JAR 파일 EC2로 전송 (🚨 JAR 파일명 명시 & deploy 디렉토리로 복사)
      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "build/libs/cinepick_BE-0.0.1-SNAPSHOT.jar"
          target: "/home/ubuntu/deploy"

      # 6. EC2에서 systemd로 Spring Boot 앱 재시작
      - name: Restart Spring Boot via systemd
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo systemctl daemon-reload
            sudo systemctl restart cinepick
            sudo systemctl status cinepick --no-pager