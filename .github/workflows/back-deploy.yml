name: Deploy Spring Boot to EC2

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 소스 코드 체크아웃
      - name: Checkout source code
        uses: actions/checkout@v3

      # 2. JDK 21 설정
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # 3. Gradle 빌드 (테스트 제외)
      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test

      # 4. EC2에 JAR 파일 복사
      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "build/libs/*.jar"
          target: "/home/ubuntu/app"

      # 5. EC2에서 기존 앱 종료 후 새 앱 실행
      - name: Run Spring Boot App on EC2 (nohup)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
#            pkill -f 'java -jar' || echo "기존 프로세스 없음. 계속 진행합니다."
            # 8080 포트에서 실행 중인 기존 프로세스 종료
            if lsof -i:8080 -t >/dev/null; then
            kill -9 $(lsof -i:8080 -t)
            fi

            cd /home/ubuntu/app
            nohup java -jar *.jar > app.log 2>&1 &
            echo "✅ 배포 완료"